type Store {
  id: ID! @goTag(key: "sql", value: "primary_key")
  name: String!
  logo: String!
  website: String!

  createdById: ID
  createdBy: CreatedByUser
  updatedById: ID
  updatedBy: UpdatedByUser
}

type PaginatedStores {
  stores: [Store!]!
  paginator: Paginator!
}

input CreateStore {
  name: String!
  logoBase64: String
  website: String! @goTag(key: "validate", value: "http_url")
  logoFile: Upload
}

extend type Query {
  allStores(paginator: PaginatorInput!, search: String): PaginatedStores!
  findStore(id: ID!): Store!
}

extend type Mutation {
  createStore(input: CreateStore!): Store! @isAuthenticated(role: "ADMIN")
}
