enum ListType {
  FAVORITES
  WATCH_LIST
  PERSONAL
}

type List {
  id: ID! @goTag(key: "sql", value: "primary_key")
  name: String!
  type: ListType!
  userId: ID!
  productList: [ProductList!]
  branchList: [BranchList!]
  createdAt: Time!
}

type ProductList {
  id: ID! @goTag(key: "sql", value: "primary_key")
  userId: ID!
  listId: ID!
  list: List
  type: ListType @goTag(key: "alias", value: "list_type")
  productId: ID!
  product: Product
  stock: Stock
  stockId: ID
  createdAt: Time!
}

type BranchList {
  id: ID! @goTag(key: "sql", value: "primary_key")
  userId: ID!
  listId: ID!
  list: List
  branchId: ID!
  branch: Branch
  createdAt: Time!
}

type BranchListWithPrices {
  id: ID! @goTag(key: "sql", value: "primary_key")
  branchId: ID!
  branch: Branch
  stock: Stock
  approximatePrice: Float
  createdAt: Time!
}

extend type Query {
  getAllLists(listType: ListType): [List!]! @isAuthenticated

  getAllProductListsByListId(listId: ID!): [ProductList!]!
    @isAuthenticated
  getAllBranchListsByListId(listId: ID!): [BranchList!]! @isAuthenticated

  getFavoriteBranchesWithPrices(productId: ID!): [BranchListWithPrices!]!
    @isAuthenticated
}

extend type Mutation {
  createList(name: String!): List! @isAuthenticated
  deleteList(listId: ID!): List! @isAuthenticated

  addToList(listId: ID!, productId: ID!, stockId: ID): ProductList!
    @isAuthenticated
  removeFromList(listId: ID!, productListId: ID!): ProductList! @isAuthenticated
  removeFromListWithProductId(listId: ID!, productId: ID!, stockId: ID): ProductList!
    @isAuthenticated

  addBranchToList(listId: ID!, branchId: ID!): BranchList! @isAuthenticated
  bulkAddBranchesToList(listId: ID!, branchIds: [ID!]!): [BranchList!]!
    @isAuthenticated
  removeBranchFromList(listId: ID!, branchListId: ID!): BranchList!
    @isAuthenticated
}
