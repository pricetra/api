enum ListType {
  FAVORITES
  WATCH_LIST
  PERSONAL
}

type List {
  id: ID! @goTag(key: "sql", value: "primary_key")
  name: String!
  type: ListType!
  userId: ID!
  productList: [ProductList!]
  branchList: [BranchList!]
  createdAt: Time!
}

type ProductList {
  id: ID! @goTag(key: "sql", value: "primary_key")
  userId: ID!
  listId: ID!
  list: List
  productId: ID!
  product: Product
  stockId: ID!
  createdAt: Time!
}

type BranchList {
  id: ID! @goTag(key: "sql", value: "primary_key")
  userId: ID!
  listId: ID!
  list: List
  branchId: ID!
  branch: Branch @goTag(key: "alias", value: "branch_list_branch")
  createdAt: Time!
}

extend type Query {
  getAllLists(listType: ListType): [List!]! @isAuthenticated
}

extend type Mutation {
  createList(name: String!): List! @isAuthenticated
  deleteList(listId: ID!): List! @isAuthenticated

  addToList(listId: ID!, productId: ID!, stockId: ID): ProductList!
    @isAuthenticated
  removeFromList(listId: ID!, productListId: ID!): ProductList! @isAuthenticated

  addBranchToList(listId: ID!, branchId: ID!): BranchList! @isAuthenticated
  removeBranchFromList(listId: ID!, branchListId: ID!): BranchList!
    @isAuthenticated
}
