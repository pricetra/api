//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SearchHistory = newSearchHistoryTable("public", "search_history", "")

type searchHistoryTable struct {
	postgres.Table

	// Columns
	ID         postgres.ColumnInteger
	SearchTerm postgres.ColumnString
	UserID     postgres.ColumnInteger
	CreatedAt  postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SearchHistoryTable struct {
	searchHistoryTable

	EXCLUDED searchHistoryTable
}

// AS creates new SearchHistoryTable with assigned alias
func (a SearchHistoryTable) AS(alias string) *SearchHistoryTable {
	return newSearchHistoryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SearchHistoryTable with assigned schema name
func (a SearchHistoryTable) FromSchema(schemaName string) *SearchHistoryTable {
	return newSearchHistoryTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SearchHistoryTable with assigned table prefix
func (a SearchHistoryTable) WithPrefix(prefix string) *SearchHistoryTable {
	return newSearchHistoryTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SearchHistoryTable with assigned table suffix
func (a SearchHistoryTable) WithSuffix(suffix string) *SearchHistoryTable {
	return newSearchHistoryTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSearchHistoryTable(schemaName, tableName, alias string) *SearchHistoryTable {
	return &SearchHistoryTable{
		searchHistoryTable: newSearchHistoryTableImpl(schemaName, tableName, alias),
		EXCLUDED:           newSearchHistoryTableImpl("", "excluded", ""),
	}
}

func newSearchHistoryTableImpl(schemaName, tableName, alias string) searchHistoryTable {
	var (
		IDColumn         = postgres.IntegerColumn("id")
		SearchTermColumn = postgres.StringColumn("search_term")
		UserIDColumn     = postgres.IntegerColumn("user_id")
		CreatedAtColumn  = postgres.TimestampzColumn("created_at")
		allColumns       = postgres.ColumnList{IDColumn, SearchTermColumn, UserIDColumn, CreatedAtColumn}
		mutableColumns   = postgres.ColumnList{SearchTermColumn, UserIDColumn, CreatedAtColumn}
	)

	return searchHistoryTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		SearchTerm: SearchTermColumn,
		UserID:     UserIDColumn,
		CreatedAt:  CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
