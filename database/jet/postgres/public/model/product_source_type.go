//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type ProductSourceType string

const (
	ProductSourceType_Pricetra  ProductSourceType = "Pricetra"
	ProductSourceType_Upcitemdb ProductSourceType = "UPCitemdb"
	ProductSourceType_Other     ProductSourceType = "Other"
	ProductSourceType_Unknown   ProductSourceType = "Unknown"
)

func (e *ProductSourceType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "Pricetra":
		*e = ProductSourceType_Pricetra
	case "UPCitemdb":
		*e = ProductSourceType_Upcitemdb
	case "Other":
		*e = ProductSourceType_Other
	case "Unknown":
		*e = ProductSourceType_Unknown
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for ProductSourceType enum")
	}

	return nil
}

func (e ProductSourceType) String() string {
	return string(e)
}
