//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type AuthDeviceType string

const (
	AuthDeviceType_Ios     AuthDeviceType = "ios"
	AuthDeviceType_Android AuthDeviceType = "android"
	AuthDeviceType_Web     AuthDeviceType = "web"
	AuthDeviceType_Other   AuthDeviceType = "other"
	AuthDeviceType_Unknown AuthDeviceType = "unknown"
)

func (e *AuthDeviceType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "ios":
		*e = AuthDeviceType_Ios
	case "android":
		*e = AuthDeviceType_Android
	case "web":
		*e = AuthDeviceType_Web
	case "other":
		*e = AuthDeviceType_Other
	case "unknown":
		*e = AuthDeviceType_Unknown
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for AuthDeviceType enum")
	}

	return nil
}

func (e AuthDeviceType) String() string {
	return string(e)
}
